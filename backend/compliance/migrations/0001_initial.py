# Generated by Django 5.2.3 on 2025-07-01 09:41

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CSRDAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_size', models.CharField(choices=[('large', 'Large (500+ employees, €40M+ revenue)'), ('medium', 'Medium (250-499 employees, €20-40M revenue)'), ('small', 'Small (<250 employees, <€20M revenue)'), ('micro', 'Micro (<10 employees, <€2M revenue)')], max_length=20)),
                ('has_eu_operations', models.BooleanField(default=False)),
                ('is_listed_company', models.BooleanField(default=False)),
                ('annual_revenue_eur', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('employee_count', models.IntegerField(blank=True, null=True)),
                ('csrd_applicable', models.BooleanField(default=False)),
                ('first_reporting_year', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('compliant', 'Compliant'), ('non_compliant', 'Non-Compliant')], default='not_started', max_length=20)),
                ('overall_readiness_score', models.IntegerField(blank=True, null=True)),
                ('gap_analysis', models.JSONField(blank=True, default=dict)),
                ('priority_actions', models.JSONField(blank=True, default=list)),
                ('compliance_timeline', models.JSONField(blank=True, default=dict)),
                ('ai_recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='csrd_assessments', to='companies.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CSRD Assessment',
                'verbose_name_plural': 'CSRD Assessments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ESRSDataPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('esrs_category', models.CharField(choices=[('E1', 'Climate Change'), ('E2', 'Pollution'), ('E3', 'Water and Marine Resources'), ('E4', 'Biodiversity and Ecosystems'), ('E5', 'Circular Economy'), ('S1', 'Own Workforce'), ('S2', 'Value Chain Workers'), ('S3', 'Affected Communities'), ('S4', 'Consumers and End-Users'), ('G1', 'Business Conduct')], max_length=5)),
                ('datapoint_code', models.CharField(max_length=20)),
                ('datapoint_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('materiality_level', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('not_material', 'Not Material'), ('pending', 'Pending Assessment')], default='pending', max_length=20)),
                ('materiality_justification', models.TextField(blank=True)),
                ('data_availability', models.CharField(choices=[('available', 'Data Available'), ('partial', 'Partial Data Available'), ('missing', 'Data Missing'), ('not_applicable', 'Not Applicable')], default='missing', max_length=20)),
                ('data_source', models.CharField(blank=True, max_length=200)),
                ('data_quality_score', models.IntegerField(blank=True, null=True)),
                ('target_completion_date', models.DateField(blank=True, null=True)),
                ('responsible_person', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='esrs_datapoints', to='compliance.csrdassessment')),
            ],
            options={
                'ordering': ['esrs_category', 'datapoint_code'],
                'unique_together': {('assessment', 'datapoint_code')},
            },
        ),
        migrations.CreateModel(
            name='ComplianceAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('blocked', 'Blocked'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('estimated_hours', models.IntegerField(blank=True, null=True)),
                ('assigned_department', models.CharField(blank=True, max_length=100)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_actions', to='compliance.csrdassessment')),
                ('related_datapoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance.esrsdatapoint')),
            ],
            options={
                'ordering': ['priority', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='RegulatoryUpdate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('update_type', models.CharField(choices=[('csrd', 'CSRD'), ('esrs', 'ESRS'), ('taxonomy', 'EU Taxonomy'), ('other', 'Other')], default='other', max_length=20)),
                ('impact_level', models.CharField(choices=[('high', 'High Impact'), ('medium', 'Medium Impact'), ('low', 'Low Impact'), ('informational', 'Informational')], default='informational', max_length=20)),
                ('source_url', models.URLField(blank=True)),
                ('publication_date', models.DateField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('ai_impact_analysis', models.TextField(blank=True)),
                ('affected_datapoints', models.JSONField(blank=True, default=list)),
                ('recommended_actions', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('companies_notified', models.ManyToManyField(blank=True, related_name='regulatory_updates', to='companies.company')),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
    ]
