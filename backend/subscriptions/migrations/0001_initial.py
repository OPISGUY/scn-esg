# Generated by Django 4.2.7 on 2025-10-05 01:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('trialing', 'Trial'), ('active', 'Active'), ('past_due', 'Past Due'), ('canceled', 'Canceled'), ('unpaid', 'Unpaid'), ('incomplete', 'Incomplete')], default='incomplete', max_length=20)),
                ('currency', models.CharField(default='GBP', max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('annual', 'Annual')], default='monthly', max_length=20)),
                ('trial_end', models.DateTimeField(blank=True, null=True)),
                ('current_period_start', models.DateTimeField(blank=True, null=True)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('free', 'Free'), ('starter', 'Starter'), ('professional', 'Professional'), ('enterprise', 'Enterprise')], max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('base_price_gbp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('features', models.JSONField(default=dict, help_text="Feature flags: e.g., {'ai_insights': True, 'csrd_compliance': False}")),
                ('limits', models.JSONField(default=dict, help_text="Usage limits: e.g., {'data_points_per_month': 50, 'users': 1, 'storage_mb': 50}")),
                ('stripe_price_id_gbp', models.CharField(blank=True, help_text='Stripe Price ID for GBP', max_length=100)),
                ('stripe_price_id_usd', models.CharField(blank=True, help_text='Stripe Price ID for USD', max_length=100)),
                ('stripe_price_id_eur', models.CharField(blank=True, help_text='Stripe Price ID for EUR', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0, help_text='Display order (0=first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Tier',
                'verbose_name_plural': 'Subscription Tiers',
                'ordering': ['sort_order', 'base_price_gbp'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_intent_id', models.CharField(max_length=100, unique=True)),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('refunded', 'Refunded')], max_length=20)),
                ('payment_method_type', models.CharField(blank=True, max_length=50)),
                ('card_brand', models.CharField(blank=True, max_length=20)),
                ('last4', models.CharField(blank=True, max_length=4)),
                ('invoice_url', models.URLField(blank=True)),
                ('receipt_url', models.URLField(blank=True)),
                ('failure_code', models.CharField(blank=True, max_length=50)),
                ('failure_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='subscriptions.subscription')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='subscription',
            name='tier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='subscriptions.subscriptiontier'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CarbonCreditTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_intent_id', models.CharField(max_length=100, unique=True)),
                ('credit_amount_tonnes', models.DecimalField(decimal_places=2, help_text='Amount of CO2e credits in tonnes', max_digits=10)),
                ('price_per_tonne', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=3)),
                ('project_id', models.CharField(max_length=100)),
                ('project_name', models.CharField(max_length=255)),
                ('verification_standard', models.CharField(help_text='VCS, Gold Standard, etc.', max_length=50)),
                ('project_type', models.CharField(blank=True, help_text='Reforestation, renewable energy, etc.', max_length=100)),
                ('project_location', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('certificate_url', models.URLField(blank=True, help_text='Generated certificate PDF URL')),
                ('certificate_generated_at', models.DateTimeField(blank=True, null=True)),
                ('receipt_url', models.URLField(blank=True)),
                ('invoice_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carbon_credit_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Carbon Credit Transaction',
                'verbose_name_plural': 'Carbon Credit Transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
